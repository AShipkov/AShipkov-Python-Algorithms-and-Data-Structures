"""
1. Отсортируйте по убыванию методом пузырька одномерный целочисленный массив,
заданный случайными числами на промежутке [-100; 100). Выведите на экран исходный и отсортированный массивы.
Примечания:
a. алгоритм сортировки должен быть в виде функции, которая принимает на вход массив данных,
b. постарайтесь сделать алгоритм умнее, но помните, что у вас должна остаться сортировка пузырьком.
Улучшенные версии сортировки, например, расчёской, шейкерная и другие в зачёт не идут.
"""
import random
import numpy as np

array_random = np.random.randint(-100, 100,5)
#array_random = [-74, -38,  -8,  -2,  95]
print(f'Исходный массив {array_random}')

def f(array):
    count = 0
    sort = True
    while sort:
        sort = False
        count += 1
        for i in range(len(array)-1):
            if array[i] > array[i+1]:
                array[i], array[i+1] = array[i+1], array[i]
                sort = True
                print(array)
    print(f'Обращений к циклу while {count}')
    return array


print(f'Отсортированный массив {f(array_random)}')
"""
Число обращений к  циклу while равно 
Наихудший вариант N = 5
Чило сравнений в теле цикла for равно
Наихудший вариант (N-1)*N/2 = (5-1)*5/2=10
Факт:
1.Исходный массив [-74, -38, -8, -2, 95]
Обращений к циклу while 1
Отсортированный массив [-74, -38, -8, -2, 95]
2.Исходный массив [-37 -76 -41 -34  20]
[-76 -37 -41 -34  20]
[-76 -41 -37 -34  20]
Обращений к циклу while 2
Отсортированный массив [-76 -41 -37 -34  20]
2.Исходный массив [-18  23 -66  25  13]
[-18 -66  23  25  13]
[-18 -66  23  13  25]
[-66 -18  23  13  25]
[-66 -18  13  23  25]
Обращений к циклу while 3
Отсортированный массив [-66 -18  13  23  25]
3.Исходный массив [ 85 -18 -29 -37 -77]
[-18  85 -29 -37 -77]
[-18 -29  85 -37 -77]
[-18 -29 -37  85 -77]
[-18 -29 -37 -77  85]
[-29 -18 -37 -77  85]
[-29 -37 -18 -77  85]
[-29 -37 -77 -18  85]
[-37 -29 -77 -18  85]
[-37 -77 -29 -18  85]
[-77 -37 -29 -18  85]
Обращений к циклу while 5, j, число сравнений 10 наихудший вариант.
Отсортированный массив [-77 -37 -29 -18  85]

Вывод: Данная организация сортировкм пузырьком позволяет избежать лишних действий в цикле while
и сокращает количество сравнений в теле цикла до 1 (если массив сортирован).
"""